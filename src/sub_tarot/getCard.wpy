<template>
    <div class="tarot-app">
        <bgAnimation class="gcp-bg" :externalClasses="'star-info-bg'"></bgAnimation>
        <div class="get-card-page" v-if="isOrdered">
            <div :style="{paddingTop: (custom.top + 30) + 'rpx'}"></div>
            <backBtn></backBtn>
            <!-- <img src="https://nqobaxsg.cn/star_tarot/dist/img/universe_bg2.png" class="gcp-bg"/> -->
            <div class="gcp-hint flex-basic flex-jc-c">
                <span class="gcp-hint-text">{{title_text}}</span>
            </div>
            <preadThree :prevCard="prevCard" :nowCard="nowCard" :nextCard="nextCard"></preadThree>
            <div>
                <div class="gcp-some-info flex-vertical flex-ai-c" style="position:relative;">
                    <span class="gsi-text1">{{getedNum}}/3</span>
                    <span class="gsi-text2" key="gt1" v-if="getedNum < 1">过去的情况</span>
                    <span class="gsi-text2" key="gt2" v-else-if="getedNum < 2">现在的情况</span>
                    <span class="gsi-text2" key="gt3" v-else-if="getedNum < 3">未来的情况</span>
                    <span class="gsi-text3">摒弃杂念选出一张卡牌</span>
                </div>
                <cardCircle class="cc-clazz" @getedCard="getedCard"></cardCircle>
            </div>
        </div>
        <div class="get-card-page" v-else>
            <img src="https://nqobaxsg.cn/star_tarot/dist/img/universe_bg2.png" class="gcp-bg"/>
        </div>
    </div>
</template>
<style type="text/css" lang="less" scoped>
@import '../style/flex-integrate.less'; 
@import '../style/animation.less';
page{
    overflow: hidden;
    height: 100%;
}
body{
    overflow-y:hidden !important;
}
.tarot-app{
    overflow: hidden;
}
.gcp-bg{
    position: absolute;
    left: 0rpx;
    right: 0rpx;
    top: 0rpx;
    bottom: 0rpx;
}
.get-card-page{
    overflow-y: auto;
    background:rgba(30,29,37,1);
    padding-top:0rpx;
    height:100vh;
}
.gcp-hint{
    position: relative;
    margin-top:46rpx;
}
.gcp-hint-text{
    font-size:24rpx;
    font-weight:400;
    color:rgba(209,192,182,1);
    line-height:34rpx;
}
.gcp-card-takeplace{
    position: relative;
    margin-top:56rpx;
    padding-left:120rpx;
    padding-right:120rpx;
    box-sizing: border-box;
}
.gct-item-card{
    margin-bottom:-60rpx;
    width:84rpx;
    height: 140rpx;
    position:relative;
}

.gct-item-cardbg{
    position: absolute;
    left:0rpx;
    top:0rpx;
    width:84rpx;
    height: 140rpx;
}
.gct-item-cardbg.rotate{
    transform-origin: 25% 50%;
    transform: rotate(180deg) translateX(-50%);
}
.gct-item-cardtext{
    width:23rpx;
    writing-mode: lr-tb;
    font-size:20rpx;
    font-weight:400;
    color:rgba(252,231,191,1);
    line-height:26rpx;   
}
.gct-item-chimg{
    width:194rpx;
    height:222rpx;
}
.gcp-wealth-sign{
    position:relative;
    height:176rpx;
}
.gws-bg{
    position:absolute;
    width:364rpx;
    height:176rpx;
}
.gws-s-text{
    font-size:36rpx;
    font-weight:400;
    color:rgba(227,189,128,1);
    line-height:48rpx;
    letter-spacing:2rpx;
}

.gcp-wealth-subhint{
    margin-top:58rpx;
}
.gws-text{
    font-size:24rpx;
    font-weight:400;
    color:rgba(237,230,225,1);
    line-height:44rpx;
    width:398rpx;
}

.gcp-getcard-btn{
    position:relative;
    padding-top:139rpx;
}

.mask-inner-btn{
  width: 336rpx;
  height: 104rpx;
}

.ggb-text{
    font-size:34rpx;
    font-weight:500;
    color:rgba(241,220,179,1);
    line-height:48rpx;
    letter-spacing:1rpx;
}
.gcp-light-ring{
    position:absolute;
    top:84rpx;
    width:638rpx;
    height:196rpx;
}

.gsi-text1{
    font-size:36rpx;
    font-weight:600;
    color:rgba(250,242,224,1);
    line-height:50rpx;
    letter-spacing:1rpx;
}

.gsi-text2{
    margin-top:22rpx;
    font-size:32rpx;
    font-weight:600;
    color:rgba(249,240,219,1);
    line-height:44rpx;
    letter-spacing:1rpx;
    background:linear-gradient(204deg, rgba(231,178,106,1) 0%, rgba(177,112,155,1) 100%);
    -webkit-background-clip:text;
    background-clip:text;
    -webkit-text-fill-color:transparent;
}

.gsi-text3{
    margin-top:12rpx;
    font-size:20rpx;
    font-weight:400;
    color:rgba(228,217,210,1);
    line-height:28rpx;
}

.cc-clazz{
    /* position:fixed;
    bottom:0rpx;
    left:50%;
    transform: translateX(-50%); */
}
</style>
<script>
//   import PinkApi from '../utils/PinkApi';
;
import config from "../js/config";
;
import UrlTool from "../js/lib/urlTool";
;
;
import apiService from '../js/apiService';
import CommonEnv from '../js/class/CommonEnv';
import wepy from '@wepy/core';
import testMixin from '../mixins/test';
wepy.page( {
  mixins: [testMixin],
  name: "home",
  data:{
      page: 1,
      title_text: "不同的占卜类型，对应不同的牌阵组合哦~",
      prevCard: null,
      isOrdered: false,
      nowCard: null,
      nextCard: null,
      getedNum: 0
    },
  
  methods: {
    getedCard(card) {
      console.log(card);
      this.getedNum++;
      if (!this.prevCard) {
        this.prevCard = card;
      } else if (!this.nowCard) {
        this.nowCard = card;
      } else if (!this.nextCard) {
        this.nextCard = card;
        setTimeout(() => {
            return apiService.orderLock(
                    this.getUrlParam('order_id'),
                    this.prevCard.name+','+this.nowCard.name + ',' + this.nextCard.name
            ).then(ret => {
                // UrlTool.gotoHrefWithParam("cardGetedEnd.html", {
                //     prev: this.prevCard.name,
                //     now: this.nowCard.name,
                //     next: this.nextCard.name
                // },true);
                wx.redirectTo({
                    url: UrlTool.getUrlByParamsObj('/sub_tarot/cardGetedEnd',Object.assign({
                        prev: this.prevCard.name,
                        now: this.nowCard.name,
                        next: this.nextCard.name
                    },this.options))
                });
            }).catch(e => {
                console.error(e);
                CommonEnv.toast('塔罗师正忙，稍后再试试喔~');
            });
          //   global.location.replace(
          //     "cardGetedEnd.html?prev=" +
          //     this.prevCard[1].name +
          //     "&now=" +
          //     this.nowCard[1].name +
          //     "&next=" +
          //     this.nextCard[1].name +
          //     "&title_text=" +
          //     this.title_text +
          //     "&v=" + this.getUrlParam('v') +
          //     '&outer=' + (this.getUrlParam("outer") || '') + '&trenchId=' + this.getUrlParam('trenchId'))
        }, 500);
      }
      //   console.log(card);
    },
    getUrlParam(name) {
    //   var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
    //   var r = global.location.search.substr(1).match(reg);
    //   if (r != null) return decodeURIComponent(r[2]);
      return this.options[name];
    }
  },
  onLoad(options) {
    this.options = options;
    this.title_text = this.getUrlParam("title");
    // require.ensure([],() => {
    //     CommonEnv.judgeIsInWeixin() &&  require('./wxshare');
    // })
    apiService.getAuguryOrderByOrderId(this.getUrlParam('order_id'),true).then(ret => {
        console.log('onLoad getAuguryOrder:',ret);
        if(ret.length){
            this.isOrdered = true;
        }else{
            CommonEnv.toast('还没有下单喔~');
        }
    }).catch(e => {
        console.error(e);
    })
  }
});
</script>
<config>
{
    usingComponents: {
    }
}
</config>